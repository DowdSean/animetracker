{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\airso\\\\Documents\\\\GitHub\\\\animetracker\\\\frontend\\\\src\\\\App.js\";\nimport './App.css';\nimport React, { Component } from 'react';\nimport Header from \"./components/Header\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleInput = event => {\n      this.setState({\n        userName: event.target.value\n      });\n    };\n\n    this.logUserName = event => {\n      event.preventDefault(); //console.log(this.state.userName);\n\n      axios.post(\"http://localhost:8000/api/\", {\n        userName: this.state.userName\n      }).then(res => {\n        /* Array of shows with the corresponding data:\r\n            name: Anime title\r\n            main_picture: Main picture for this specific anime, contains url to image\r\n            synopsis: Anime synopsis\r\n            animeID: ID of anime on MAL\r\n            rank: Rank of anime in terms of popularity\r\n              Not working yet:\r\n            genres: Only returns IDs of genres, not genre names, will later be fixed\r\n        */\n        var rec = JSON.parse(res.data).anime;\n        console.log(rec);\n        this.state.recommended = rec;\n        console.log(\"Recommended shows:\");\n\n        for (var i = 0; i < rec.length; i++) {\n          console.log(rec[i].name);\n        }\n      }).catch(err => console.log(err));\n    };\n\n    this.state = {\n      userName: \"\",\n      recommended: [],\n      ready: false\n    };\n  }\n\n  componentDidMount() {\n    document.title = \"MARS - My Anime Recommendations\";\n    axios.get(\"http://localhost:8000/api/\").then(res => console.log(res)).catch(err => console.log(err));\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"App-body\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Find Anime Recommendations\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"Search-Bar\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            onChange: this.handleInput,\n            placeholder: \"Enter MAL Username\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 23\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: this.logUserName,\n            children: \" Search \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 23\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"Recommendations\",\n        children: /*#__PURE__*/_jsxDEV(\"ul\", {\n          children: this.state.recommended\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 19\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["C:/Users/airso/Documents/GitHub/animetracker/frontend/src/App.js"],"names":["React","Component","Header","axios","App","constructor","props","handleInput","event","setState","userName","target","value","logUserName","preventDefault","post","state","then","res","rec","JSON","parse","data","anime","console","log","recommended","i","length","name","catch","err","ready","componentDidMount","document","title","get","render"],"mappings":";AAAA,OAAO,WAAP;AACA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,MAAP,MAAmB,qBAAnB;AACA,OAAOC,KAAP,MAAkB,OAAlB;;;AAEA,MAAMC,GAAN,SAAkBH,SAAlB,CAA4B;AACxBI,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;;AADe,SAgBnBC,WAhBmB,GAgBLC,KAAK,IAAI;AACrB,WAAKC,QAAL,CAAc;AAACC,QAAAA,QAAQ,EAAEF,KAAK,CAACG,MAAN,CAAaC;AAAxB,OAAd;AACD,KAlBkB;;AAAA,SAmBnBC,WAnBmB,GAmBLL,KAAK,IAAI;AACrBA,MAAAA,KAAK,CAACM,cAAN,GADqB,CAErB;;AACAX,MAAAA,KAAK,CACEY,IADP,CACY,4BADZ,EAC0C;AAACL,QAAAA,QAAQ,EAAE,KAAKM,KAAL,CAAWN;AAAtB,OAD1C,EAEOO,IAFP,CAEaC,GAAD,IAAS;AACX;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEgB,YAAIC,GAAG,GAAGC,IAAI,CAACC,KAAL,CAAWH,GAAG,CAACI,IAAf,EAAqBC,KAA/B;AACAC,QAAAA,OAAO,CAACC,GAAR,CAAYN,GAAZ;AACA,aAAKH,KAAL,CAAWU,WAAX,GAAyBP,GAAzB;AACAK,QAAAA,OAAO,CAACC,GAAR,CAAY,oBAAZ;;AACA,aAAI,IAAIE,CAAC,GAAG,CAAZ,EAAeA,CAAC,GAAGR,GAAG,CAACS,MAAvB,EAA+BD,CAAC,EAAhC,EAAoC;AAChCH,UAAAA,OAAO,CAACC,GAAR,CAAYN,GAAG,CAACQ,CAAD,CAAH,CAAOE,IAAnB;AACH;AACJ,OApBP,EAqBOC,KArBP,CAqBcC,GAAD,IAASP,OAAO,CAACC,GAAR,CAAYM,GAAZ,CArBtB;AAsBD,KA5CkB;;AAEf,SAAKf,KAAL,GAAa;AACXN,MAAAA,QAAQ,EAAE,EADC;AAEXgB,MAAAA,WAAW,EAAE,EAFF;AAGXM,MAAAA,KAAK,EAAE;AAHI,KAAb;AAKH;;AACDC,EAAAA,iBAAiB,GAAG;AAChBC,IAAAA,QAAQ,CAACC,KAAT,GAAiB,iCAAjB;AACAhC,IAAAA,KAAK,CACAiC,GADL,CACS,4BADT,EAEKnB,IAFL,CAEWC,GAAD,IAASM,OAAO,CAACC,GAAR,CAAYP,GAAZ,CAFnB,EAGKY,KAHL,CAGYC,GAAD,IAASP,OAAO,CAACC,GAAR,CAAYM,GAAZ,CAHpB;AAIH;;AAgCDM,EAAAA,MAAM,GAAG;AACL,wBACI;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA,8BACI,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI;AAAM,QAAA,SAAS,EAAC,UAAhB;AAAA,gCACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,eAII;AAAK,UAAA,SAAS,EAAC,YAAf;AAAA,kCACE;AAAO,YAAA,QAAQ,EAAE,KAAK9B,WAAtB;AAAmC,YAAA,WAAW,EAAC;AAA/C;AAAA;AAAA;AAAA;AAAA,kBADF,eAEE;AAAQ,YAAA,OAAO,EAAE,KAAKM,WAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,gBAJJ;AAAA;AAAA;AAAA;AAAA;AAAA,cAFJ,eAWI;AAAK,QAAA,SAAS,EAAC,iBAAf;AAAA,+BACE;AAAA,oBACG,KAAKG,KAAL,CAAWU;AADd;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cAXJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ;AAmBH;;AAnEuB;;AAsE5B,eAAetB,GAAf","sourcesContent":["import './App.css';\r\nimport React, { Component } from 'react';\r\nimport Header from \"./components/Header\";\r\nimport axios from \"axios\";\r\n\r\nclass App extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n          userName: \"\",\r\n          recommended: [],\r\n          ready: false\r\n        }\r\n    }\r\n    componentDidMount() {\r\n        document.title = \"MARS - My Anime Recommendations\"\r\n        axios\r\n            .get(\"http://localhost:8000/api/\")\r\n            .then((res) => console.log(res))\r\n            .catch((err) => console.log(err));\r\n    }\r\n\r\n    handleInput = event => {\r\n      this.setState({userName: event.target.value});\r\n    }\r\n    logUserName = event => {\r\n      event.preventDefault();\r\n      //console.log(this.state.userName);\r\n      axios\r\n            .post(\"http://localhost:8000/api/\", {userName: this.state.userName})\r\n            .then((res) => {\r\n                /* Array of shows with the corresponding data:\r\n                    name: Anime title\r\n                    main_picture: Main picture for this specific anime, contains url to image\r\n                    synopsis: Anime synopsis\r\n                    animeID: ID of anime on MAL\r\n                    rank: Rank of anime in terms of popularity\r\n\r\n                    Not working yet:\r\n                    genres: Only returns IDs of genres, not genre names, will later be fixed\r\n                */\r\n                var rec = JSON.parse(res.data).anime;\r\n                console.log(rec);\r\n                this.state.recommended = rec\r\n                console.log(\"Recommended shows:\");\r\n                for(var i = 0; i < rec.length; i++) {\r\n                    console.log(rec[i].name);\r\n                }\r\n            })\r\n            .catch((err) => console.log(err));\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"App\">\r\n                <Header />\r\n                <div  className=\"App-body\">\r\n                    <h2>\r\n                        Find Anime Recommendations\r\n                    </h2>\r\n                    <div className=\"Search-Bar\">\r\n                      <input onChange={this.handleInput} placeholder=\"Enter MAL Username\"/>\r\n                      <button onClick={this.logUserName}> Search </button>\r\n                    </div>\r\n                </div>\r\n                <div className=\"Recommendations\">\r\n                  <ul>\r\n                    {this.state.recommended}\r\n                  </ul>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default App;\r\n"]},"metadata":{},"sourceType":"module"}