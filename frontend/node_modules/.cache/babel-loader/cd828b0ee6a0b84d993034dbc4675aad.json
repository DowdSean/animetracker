{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Connor L\\\\Documents\\\\GitHub\\\\animetracker\\\\frontend\\\\src\\\\App.js\";\nimport './App.css';\nimport React, { Component } from 'react';\nimport Header from \"./components/Header\";\nimport axios from \"axios\";\nimport { Multiselect } from \"multiselect-react-dropdown\";\nimport Recommendations from './components/Recommendations'; // Base website manager, responsible for displaying the website and transmitting data to the backend\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n\n    this.setUserName = event => {\n      this.setState({\n        userName: event.target.value\n      });\n    };\n\n    this.setGenres = event => {\n      console.log(\"Selected Genre List: \" + JSON.stringify(event));\n      var list = [];\n\n      for (var i = 0; i < event.length; i++) {\n        list.push(event[i].genre_name);\n      }\n\n      if (list.length === 0) this.setState({\n        selectedGenres: \"[]\"\n      });else this.setState({\n        selectedGenres: JSON.stringify(list)\n      });\n    };\n\n    this.setTV = event => {};\n\n    this.setMaxGenres = event => {\n      var n = event.target.value.replace(/\\D/g, '');\n      if (n == \"\") n = \"0\";\n      n = parseInt(n);\n      this.setState({\n        maxResults: n\n      });\n    };\n\n    this.executeSearch = event => {\n      event.preventDefault(); //console.log(this.state.userName);\n\n      axios.post(\"http://localhost:8000/api/\", {\n        userName: this.state.userName,\n        selected_genres: this.state.selectedGenres,\n        max_results: Math.max(0, this.state.maxResults)\n      }).then(res => {\n        /* Array of shows with the corresponding data:\r\n            name: Anime title\r\n            main_picture: Main picture for this specific anime, contains url to image\r\n            synopsis: Anime synopsis\r\n            animeID: ID of anime on MAL\r\n            rank: Rank of anime in terms of popularity\r\n            genres: Returns each genre the show contains in a string\r\n        */\n        var rec = JSON.parse(res.data).anime;\n        console.log(rec);\n        this.setState({\n          recommended: rec,\n          // Update state variable with results\n          ready: true\n        });\n        console.log(\"Recommended shows:\");\n\n        for (var i = 0; i < rec.length; i++) {\n          console.log(rec[i].name);\n        }\n      }).catch(err => console.log(err));\n    };\n\n    this.showAdvancedOptions = event => {\n      event.preventDefault();\n\n      if (this.state.showingOptions) {\n        document.getElementById(\"advancedOptions\").style.pointerEvents = \"none\";\n        document.getElementById(\"advancedOptions\").style.opacity = 0;\n        document.getElementById(\"advancedOptionsText\").innerText = \"Click to show advanced options\";\n        this.setState({\n          showingOptions: false\n        });\n      } else {\n        document.getElementById(\"advancedOptions\").style.pointerEvents = \"auto\";\n        document.getElementById(\"advancedOptions\").style.opacity = 1;\n        document.getElementById(\"advancedOptionsText\").innerText = \"Click to hide advanced options\";\n        this.setState({\n          showingOptions: true\n        });\n      }\n    };\n\n    this.state = {\n      userName: \"\",\n      recommended: [],\n      allGenres: [],\n      selectedGenres: \"[]\",\n      ready: false,\n      maxResults: 20,\n      showingOptions: false,\n      tv: true,\n      movies: false,\n      specials: false,\n      ovas: false,\n      onas: false\n    };\n  }\n\n  componentDidMount() {\n    document.title = \"MARS - My Anime Recommendations\";\n    axios.get(\"http://localhost:8000/api/\").then(res => {\n      console.log(res);\n      var genreList = JSON.parse(res.data).genre_list;\n      genreList.sort(function (a, b) {\n        return a.genre_name < b.genre_name ? -1 : a.genre_name > b.genre_name ? 1 : 0;\n      });\n      this.setState({\n        allGenres: genreList\n      });\n      console.log(this.state.allGenres);\n    }).catch(err => console.log(err));\n  } // Updates username that will be sent to backend\n\n\n  // Uses the React Basic Table package to generate a table of recommended shows, returns the rows and columns of the table\n  generateTable() {\n    var cols = [\"Relevance\"];\n    var rows = [];\n\n    for (var p in this.state.recommended[0]) {\n      cols.push(p.replace(/^\\w/, c => c.toUpperCase()).replace(\"_\", \" \"));\n    }\n\n    for (var i = 0; i < this.state.recommended.length; i++) {\n      var entry = [/*#__PURE__*/_jsxDEV(\"span\", {\n        \"data-reactbasictable-value\": \"Entry\" + i + 1,\n        children: [\" \", i + 1, \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 17\n      }, this)];\n\n      for (var key in this.state.recommended[i]) {\n        if (key == \"main_picture\") {\n          entry.push( /*#__PURE__*/_jsxDEV(\"a\", {\n            href: \"https://myanimelist.net/anime/\" + this.state.recommended[i][\"MAL_ID\"],\n            children: /*#__PURE__*/_jsxDEV(\"img\", {\n              className: \"thumbnail\",\n              src: this.state.recommended[i][key]\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 124,\n              columnNumber: 21\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 123,\n            columnNumber: 32\n          }, this));\n        } else {\n          entry.push( /*#__PURE__*/_jsxDEV(\"span\", {\n            \"data-reactbasictable-value\": key.toString(),\n            children: [\" \", this.state.recommended[i][key], \" \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 127,\n            columnNumber: 32\n          }, this));\n        }\n      }\n\n      rows.push(entry);\n    }\n\n    return {\n      cols: cols,\n      rows: rows\n    };\n  }\n\n  // Renders the page by returning HTML and React components\n  render() {\n    var cols = [\"Relevance\"];\n    var rows = [];\n\n    if (this.state.ready) {\n      var tableData = this.generateTable();\n      cols = tableData.cols;\n      rows = tableData.rows;\n    }\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"App-body\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"Top-Box\",\n          children: /*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"Find Anime Recommendations:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 164,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 163,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"Middle-Box\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"Search-Bar\",\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              onChange: this.setUserName,\n              placeholder: \"MAL Username (optional)\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 170,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: this.executeSearch,\n              children: \"Search\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 173,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 169,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            id: \"advancedOptionsText\",\n            className: \"Advanced-Options-Text\",\n            onClick: this.showAdvancedOptions,\n            children: \"Click to show advanced options\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 177,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            id: \"advancedOptions\",\n            className: \"Advanced-Options\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"Genre-Dropdown\",\n              children: /*#__PURE__*/_jsxDEV(Multiselect, {\n                options: this.state.allGenres,\n                onSelect: this.setGenres,\n                onRemove: this.setGenres,\n                displayValue: \"genre_name\",\n                placeholder: \"Select Genres (optional)\",\n                hidePlaceholder: true\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 182,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 181,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"Media-Options\",\n              children: [\" Show\", /*#__PURE__*/_jsxDEV(\"div\", {\n                children: \"TV: \"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 192,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                checked: true,\n                type: \"checkbox\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 193,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                children: \"Movies: \"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 194,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"checkbox\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 195,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                children: \"Specials: \"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 196,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"checkbox\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 197,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                children: \"OVAs: \"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 198,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"checkbox\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 199,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                children: \"ONAs: \"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 200,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"checkbox\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 201,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 191,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              className: \"Max-Results\",\n              type: \"text\",\n              placeholder: \"Max Results (Default 20)\",\n              onChange: this.setMaxGenres\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 203,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 180,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 168,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"Bottom-Box\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 210,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Recommendations, {\n        ready: this.state.ready,\n        rows: rows,\n        cols: cols\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 213,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["C:/Users/Connor L/Documents/GitHub/animetracker/frontend/src/App.js"],"names":["React","Component","Header","axios","Multiselect","Recommendations","App","constructor","props","setUserName","event","setState","userName","target","value","setGenres","console","log","JSON","stringify","list","i","length","push","genre_name","selectedGenres","setTV","setMaxGenres","n","replace","parseInt","maxResults","executeSearch","preventDefault","post","state","selected_genres","max_results","Math","max","then","res","rec","parse","data","anime","recommended","ready","name","catch","err","showAdvancedOptions","showingOptions","document","getElementById","style","pointerEvents","opacity","innerText","allGenres","tv","movies","specials","ovas","onas","componentDidMount","title","get","genreList","genre_list","sort","a","b","generateTable","cols","rows","p","c","toUpperCase","entry","key","toString","render","tableData"],"mappings":"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","sourcesContent":["import './App.css';\r\nimport React, { Component } from 'react';\r\nimport Header from \"./components/Header\";\r\nimport axios from \"axios\";\r\nimport { Multiselect } from \"multiselect-react-dropdown\";\r\nimport Recommendations from './components/Recommendations';\r\n\r\n\r\n// Base website manager, responsible for displaying the website and transmitting data to the backend\r\nclass App extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            userName: \"\",\r\n            recommended: [],\r\n            allGenres: [],\r\n            selectedGenres: \"[]\",\r\n            ready: false,\r\n            maxResults: 20,\r\n            showingOptions: false,\r\n            tv: true,\r\n            movies: false,\r\n            specials: false,\r\n            ovas: false,\r\n            onas: false\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        document.title = \"MARS - My Anime Recommendations\"\r\n        axios\r\n            .get(\"http://localhost:8000/api/\")\r\n            .then((res) => {\r\n                console.log(res)\r\n\r\n                var genreList = JSON.parse(res.data).genre_list\r\n                genreList.sort(function(a,b) {\r\n                  return (a.genre_name < b.genre_name) ? -1 :\r\n                   (a.genre_name > b.genre_name) ? 1 : 0;\r\n                });\r\n                this.setState({allGenres: genreList});\r\n                console.log(this.state.allGenres)\r\n            })\r\n            .catch((err) => console.log(err));\r\n    }\r\n\r\n    // Updates username that will be sent to backend\r\n    setUserName = event => {\r\n        this.setState({userName: event.target.value});\r\n    }\r\n    // Updates selected genres list that will be sent to backend\r\n    setGenres = event => {\r\n        console.log(\"Selected Genre List: \" + JSON.stringify(event));\r\n        var list = [];\r\n        for(var i = 0; i < event.length; i++) {\r\n            list.push(event[i].genre_name);\r\n        }\r\n        if(list.length === 0)\r\n            this.setState({selectedGenres: \"[]\"});\r\n        else\r\n            this.setState({selectedGenres: JSON.stringify(list)});\r\n    }\r\n\r\n    setTV = event => {\r\n        \r\n    }\r\n\r\n    // Updates user preference for maximum results generated\r\n    setMaxGenres = event => {\r\n      var n = event.target.value.replace(/\\D/g, '')\r\n      if (n == \"\")\r\n        n=\"0\";\r\n      n = parseInt(n)\r\n      this.setState({maxResults:n});\r\n    }\r\n\r\n    // Sends all relevent information from this.state to the backend\r\n    executeSearch = event => {\r\n        event.preventDefault();\r\n        //console.log(this.state.userName);\r\n        axios\r\n            .post(\"http://localhost:8000/api/\", {\r\n              userName: this.state.userName,\r\n              selected_genres: this.state.selectedGenres,\r\n              max_results: Math.max(0,this.state.maxResults),\r\n            })\r\n            .then((res) => {\r\n                /* Array of shows with the corresponding data:\r\n                    name: Anime title\r\n                    main_picture: Main picture for this specific anime, contains url to image\r\n                    synopsis: Anime synopsis\r\n                    animeID: ID of anime on MAL\r\n                    rank: Rank of anime in terms of popularity\r\n                    genres: Returns each genre the show contains in a string\r\n                */\r\n                var rec = JSON.parse(res.data).anime;\r\n                console.log(rec);\r\n                this.setState({\r\n                  recommended: rec,  // Update state variable with results\r\n                  ready: true,\r\n                })\r\n                console.log(\"Recommended shows:\");\r\n                for(var i = 0; i < rec.length; i++) {\r\n                    console.log(rec[i].name);\r\n                }\r\n            })\r\n            .catch((err) => console.log(err));\r\n    };\r\n\r\n    // Uses the React Basic Table package to generate a table of recommended shows, returns the rows and columns of the table\r\n    generateTable() {\r\n        var cols = [\"Relevance\"]\r\n        var rows = []\r\n        for(var p in this.state.recommended[0]) {\r\n            cols.push(p.replace(/^\\w/, (c) => c.toUpperCase()).replace(\"_\",\" \"))\r\n        }\r\n        for(var i=0; i< this.state.recommended.length;i++) {\r\n            var entry = [\r\n                <span data-reactbasictable-value={\"Entry\" + i+1}> {i+1} </span>\r\n            ]\r\n            for(var key in this.state.recommended[i]) {\r\n                if (key==\"main_picture\") {\r\n                    entry.push(<a href={\"https://myanimelist.net/anime/\"+this.state.recommended[i][\"MAL_ID\"]}>\r\n                    <img className=\"thumbnail\" src={this.state.recommended[i][key]}>\r\n                    </img></a>)\r\n                } else {\r\n                    entry.push(<span data-reactbasictable-value={key.toString()}> {this.state.recommended[i][key]} </span>)\r\n                }\r\n            }\r\n            rows.push(entry)\r\n        }\r\n        return {cols: cols, rows: rows};\r\n    }\r\n\r\n    showAdvancedOptions = event => {\r\n        event.preventDefault();\r\n        if(this.state.showingOptions) {\r\n            document.getElementById(\"advancedOptions\").style.pointerEvents = \"none\";\r\n            document.getElementById(\"advancedOptions\").style.opacity = 0;\r\n            document.getElementById(\"advancedOptionsText\").innerText = \"Click to show advanced options\";\r\n            this.setState({showingOptions: false});\r\n        } else {\r\n            document.getElementById(\"advancedOptions\").style.pointerEvents = \"auto\";\r\n            document.getElementById(\"advancedOptions\").style.opacity = 1;\r\n            document.getElementById(\"advancedOptionsText\").innerText = \"Click to hide advanced options\";\r\n            this.setState({showingOptions: true});\r\n        }\r\n    }\r\n\r\n    // Renders the page by returning HTML and React components\r\n    render() {\r\n        var cols = [\"Relevance\"]\r\n        var rows = []\r\n        if (this.state.ready) {\r\n            var tableData = this.generateTable();\r\n            cols = tableData.cols;\r\n            rows = tableData.rows;\r\n        }\r\n        return (\r\n            <div className=\"App\">\r\n                <Header />\r\n                <div  className=\"App-body\">\r\n                    <div className=\"Top-Box\">\r\n                        <h2>\r\n                            Find Anime Recommendations:\r\n                        </h2>\r\n                    </div>\r\n                    <div className=\"Middle-Box\">\r\n                        <div className=\"Search-Bar\">\r\n                            <input onChange={this.setUserName}\r\n                              placeholder=\"MAL Username (optional)\"\r\n                            />\r\n                            <button onClick={this.executeSearch}>\r\n                              Search\r\n                            </button>\r\n                        </div>\r\n                        <button id=\"advancedOptionsText\" className=\"Advanced-Options-Text\" onClick={this.showAdvancedOptions}>\r\n                            Click to show advanced options\r\n                        </button>\r\n                        <div id=\"advancedOptions\" className=\"Advanced-Options\">\r\n                            <div className=\"Genre-Dropdown\">\r\n                                <Multiselect\r\n                                options={this.state.allGenres}\r\n                                onSelect={this.setGenres}\r\n                                onRemove={this.setGenres}\r\n                                displayValue=\"genre_name\"\r\n                                placeholder=\"Select Genres (optional)\"\r\n                                hidePlaceholder={true}\r\n                                />\r\n                            </div>\r\n                            <div className=\"Media-Options\"> Show\r\n                                <div>TV: </div>\r\n                                <input checked type=\"checkbox\"></input>\r\n                                <div>Movies: </div>\r\n                                <input type=\"checkbox\"></input>\r\n                                <div>Specials: </div>\r\n                                <input type=\"checkbox\"></input>\r\n                                <div>OVAs: </div>\r\n                                <input type=\"checkbox\"></input>\r\n                                <div>ONAs: </div>\r\n                                <input type=\"checkbox\"></input>\r\n                            </div>\r\n                            <input className=\"Max-Results\"\r\n                                type=\"text\"\r\n                                placeholder=\"Max Results (Default 20)\"\r\n                                onChange={this.setMaxGenres}\r\n                            />\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"Bottom-Box\">\r\n                    </div>\r\n                </div>\r\n                <Recommendations ready={this.state.ready} rows={rows} cols={cols}/>\r\n            </div>\r\n        );\r\n    }\r\n}\r\nexport default App;\r\n"]},"metadata":{},"sourceType":"module"}