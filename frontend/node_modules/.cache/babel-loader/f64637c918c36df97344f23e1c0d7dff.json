{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\airso\\\\Documents\\\\GitHub\\\\animetracker\\\\frontend\\\\src\\\\App.js\";\nimport './App.css';\nimport React, { Component } from 'react';\nimport Header from \"./components/Header\";\nimport axios from \"axios\";\nimport { Multiselect } from \"multiselect-react-dropdown\";\nimport Recommendations from './components/Recommendations'; // Base website manager, responsible for displaying the website and transmitting data to the backend\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n\n    this.setUserName = event => {\n      this.setState({\n        userName: event.target.value\n      });\n    };\n\n    this.setGenres = event => {\n      console.log(\"Selected Genre List: \" + JSON.stringify(event));\n      var list = [];\n\n      for (var i = 0; i < event.length; i++) {\n        list.push(event[i].genre_name);\n      }\n\n      if (list.length === 0) this.setState({\n        selected_genres: \"[]\"\n      });else this.setState({\n        selected_genres: JSON.stringify(list)\n      });\n    };\n\n    this.setMaxGenres = event => {\n      var n = event.target.value.replace(/\\D/g, '');\n      if (n == \"\") n = \"0\";\n      n = parseInt(n);\n      console.log(typeof n);\n      this.setState({\n        max_results: n\n      });\n    };\n\n    this.executeSearch = event => {\n      event.preventDefault(); //console.log(this.state.userName);\n\n      axios.post(\"http://localhost:8000/api/\", {\n        userName: this.state.userName,\n        selected_genres: this.state.selected_genres\n      }).then(res => {\n        /* Array of shows with the corresponding data:\r\n            name: Anime title\r\n            main_picture: Main picture for this specific anime, contains url to image\r\n            synopsis: Anime synopsis\r\n            animeID: ID of anime on MAL\r\n            rank: Rank of anime in terms of popularity\r\n            genres: Returns each genre the show contains in a string\r\n        */\n        var rec = JSON.parse(res.data).anime;\n        console.log(rec);\n        this.setState({\n          recommended: rec,\n          // Update state variable with results\n          ready: true\n        });\n        console.log(\"Recommended shows:\");\n\n        for (var i = 0; i < rec.length; i++) {\n          console.log(rec[i].name);\n        }\n      }).catch(err => console.log(err));\n    };\n\n    this.state = {\n      userName: \"\",\n      recommended: [],\n      all_genres: [],\n      selected_genres: \"[]\",\n      ready: false,\n      max_results: 20\n    };\n  }\n\n  componentDidMount() {\n    document.title = \"MARS - My Anime Recommendations\";\n    axios.get(\"http://localhost:8000/api/\").then(res => {\n      console.log(res);\n      var genreList = JSON.parse(res.data).genre_list;\n      genreList.sort(function (a, b) {\n        return a.genre_name < b.genre_name ? -1 : a.genre_name > b.genre_name ? 1 : 0;\n      });\n      this.setState({\n        all_genres: genreList\n      });\n      console.log(this.state.all_genres);\n    }).catch(err => console.log(err));\n  } // Updates username that will be sent to backend\n\n\n  // Uses the React Basic Table package to generate a table of recommended shows, returns the rows and columns of the table\n  generateTable() {\n    var cols = [\"Relevance\"];\n    var rows = [];\n\n    for (var p in this.state.recommended[0]) {\n      cols.push(p.replace(/^\\w/, c => c.toUpperCase()).replace(\"_\", \" \"));\n    }\n\n    for (var i = 0; i < this.state.recommended.length; i++) {\n      var entry = [/*#__PURE__*/_jsxDEV(\"span\", {\n        \"data-reactbasictable-value\": \"Entry\" + i + 1,\n        children: [\" \", i + 1, \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 17\n      }, this)];\n\n      for (var key in this.state.recommended[i]) {\n        if (key == \"main_picture\") {\n          entry.push( /*#__PURE__*/_jsxDEV(\"a\", {\n            href: \"https://myanimelist.net/anime/\" + this.state.recommended[i][\"MAL_ID\"],\n            children: /*#__PURE__*/_jsxDEV(\"img\", {\n              className: \"thumbnail\",\n              src: this.state.recommended[i][key]\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 111,\n              columnNumber: 21\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 110,\n            columnNumber: 32\n          }, this));\n        } else {\n          entry.push( /*#__PURE__*/_jsxDEV(\"span\", {\n            \"data-reactbasictable-value\": key.toString(),\n            children: [\" \", this.state.recommended[i][key], \" \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 114,\n            columnNumber: 32\n          }, this));\n        }\n      }\n\n      rows.push(entry);\n    }\n\n    return {\n      cols: cols,\n      rows: rows\n    };\n  } // Renders the page by returning HTML and React components\n\n\n  render() {\n    var cols = [\"Relevance\"];\n    var rows = [];\n\n    if (this.state.ready) {\n      var tableData = this.generateTable();\n      cols = tableData.cols;\n      rows = tableData.rows;\n    }\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"App-body\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"Top-Box\",\n          children: /*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"Find Anime Recommendations:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 136,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"Middle-Box\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"Search-Bar\",\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              onChange: this.setUserName,\n              placeholder: \"MAL Username (optional)\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 142,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: this.executeSearch,\n              children: \" Search \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 143,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 141,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"Genre-Dropdown\",\n            children: [/*#__PURE__*/_jsxDEV(Multiselect, {\n              options: this.state.all_genres,\n              onSelect: this.setGenres,\n              onRemove: this.setGenres,\n              displayValue: \"genre_name\",\n              placeholder: \"Select Genres (optional)\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 146,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              placeholder: \"Max. Results\",\n              value: this.state.max_results,\n              onChange: this.setMaxGenres\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 147,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 145,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 140,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"Bottom-Box\",\n          children: this.state.max_results\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 155,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Recommendations, {\n        ready: this.state.ready,\n        rows: rows,\n        cols: cols\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["C:/Users/airso/Documents/GitHub/animetracker/frontend/src/App.js"],"names":["React","Component","Header","axios","Multiselect","Recommendations","App","constructor","props","setUserName","event","setState","userName","target","value","setGenres","console","log","JSON","stringify","list","i","length","push","genre_name","selected_genres","setMaxGenres","n","replace","parseInt","max_results","executeSearch","preventDefault","post","state","then","res","rec","parse","data","anime","recommended","ready","name","catch","err","all_genres","componentDidMount","document","title","get","genreList","genre_list","sort","a","b","generateTable","cols","rows","p","c","toUpperCase","entry","key","toString","render","tableData"],"mappings":"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","sourcesContent":["import './App.css';\r\nimport React, { Component } from 'react';\r\nimport Header from \"./components/Header\";\r\nimport axios from \"axios\";\r\nimport { Multiselect } from \"multiselect-react-dropdown\";\r\nimport Recommendations from './components/Recommendations';\r\n\r\n\r\n// Base website manager, responsible for displaying the website and transmitting data to the backend\r\nclass App extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            userName: \"\",\r\n            recommended: [],\r\n            all_genres: [],\r\n            selected_genres: \"[]\",\r\n            ready: false,\r\n            max_results: 20\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        document.title = \"MARS - My Anime Recommendations\"\r\n        axios\r\n            .get(\"http://localhost:8000/api/\")\r\n            .then((res) => {\r\n                console.log(res)\r\n\r\n                var genreList = JSON.parse(res.data).genre_list\r\n                genreList.sort(function(a,b) {\r\n                  return (a.genre_name < b.genre_name) ? -1 :\r\n                   (a.genre_name > b.genre_name) ? 1 : 0;\r\n                });\r\n                this.setState({all_genres: genreList});\r\n                console.log(this.state.all_genres)\r\n            })\r\n            .catch((err) => console.log(err));\r\n    }\r\n\r\n    // Updates username that will be sent to backend\r\n    setUserName = event => {\r\n        this.setState({userName: event.target.value});\r\n    }\r\n    // Updates selected genres list that will be sent to backend\r\n    setGenres = event => {\r\n        console.log(\"Selected Genre List: \" + JSON.stringify(event));\r\n        var list = [];\r\n        for(var i = 0; i < event.length; i++) {\r\n            list.push(event[i].genre_name);\r\n        }\r\n        if(list.length === 0)\r\n            this.setState({selected_genres: \"[]\"});\r\n        else\r\n            this.setState({selected_genres: JSON.stringify(list)});\r\n    }\r\n\r\n    // Updates user preference for maximum results generated\r\n    setMaxGenres = event => {\r\n      var n = event.target.value.replace(/\\D/g, '')\r\n      if (n == \"\")\r\n        n=\"0\";\r\n      n = parseInt(n)\r\n      console.log(typeof n)\r\n      this.setState({max_results:n});\r\n    }\r\n\r\n    // Sends all relevent information from this.state to the backend\r\n    executeSearch = event => {\r\n        event.preventDefault();\r\n        //console.log(this.state.userName);\r\n        axios\r\n            .post(\"http://localhost:8000/api/\", {userName: this.state.userName, selected_genres: this.state.selected_genres})\r\n            .then((res) => {\r\n                /* Array of shows with the corresponding data:\r\n                    name: Anime title\r\n                    main_picture: Main picture for this specific anime, contains url to image\r\n                    synopsis: Anime synopsis\r\n                    animeID: ID of anime on MAL\r\n                    rank: Rank of anime in terms of popularity\r\n                    genres: Returns each genre the show contains in a string\r\n                */\r\n                var rec = JSON.parse(res.data).anime;\r\n                console.log(rec);\r\n                this.setState({\r\n                  recommended: rec,  // Update state variable with results\r\n                  ready: true,\r\n                })\r\n                console.log(\"Recommended shows:\");\r\n                for(var i = 0; i < rec.length; i++) {\r\n                    console.log(rec[i].name);\r\n                }\r\n            })\r\n            .catch((err) => console.log(err));\r\n    };\r\n\r\n    // Uses the React Basic Table package to generate a table of recommended shows, returns the rows and columns of the table\r\n    generateTable() {\r\n        var cols = [\"Relevance\"]\r\n        var rows = []\r\n        for(var p in this.state.recommended[0]) {\r\n            cols.push(p.replace(/^\\w/, (c) => c.toUpperCase()).replace(\"_\",\" \"))\r\n        }\r\n        for(var i=0; i< this.state.recommended.length;i++) {\r\n            var entry = [\r\n                <span data-reactbasictable-value={\"Entry\" + i+1}> {i+1} </span>\r\n            ]\r\n            for(var key in this.state.recommended[i]) {\r\n                if (key==\"main_picture\") {\r\n                    entry.push(<a href={\"https://myanimelist.net/anime/\"+this.state.recommended[i][\"MAL_ID\"]}>\r\n                    <img className=\"thumbnail\" src={this.state.recommended[i][key]}>\r\n                    </img></a>)\r\n                } else {\r\n                    entry.push(<span data-reactbasictable-value={key.toString()}> {this.state.recommended[i][key]} </span>)\r\n                }\r\n            }\r\n            rows.push(entry)\r\n        }\r\n        return {cols: cols, rows: rows};\r\n    }\r\n\r\n    // Renders the page by returning HTML and React components\r\n    render() {\r\n        var cols = [\"Relevance\"]\r\n        var rows = []\r\n        if (this.state.ready) {\r\n            var tableData = this.generateTable();\r\n            cols = tableData.cols;\r\n            rows = tableData.rows;\r\n        }\r\n        return (\r\n            <div className=\"App\">\r\n                <Header />\r\n                <div  className=\"App-body\">\r\n                    <div className=\"Top-Box\">\r\n                        <h2>\r\n                            Find Anime Recommendations:\r\n                        </h2>\r\n                    </div>\r\n                    <div className=\"Middle-Box\">\r\n                        <div className=\"Search-Bar\">\r\n                            <input onChange={this.setUserName} placeholder=\"MAL Username (optional)\"/>\r\n                            <button onClick={this.executeSearch}> Search </button>\r\n                        </div>\r\n                        <div className=\"Genre-Dropdown\">\r\n                            <Multiselect options={this.state.all_genres} onSelect={this.setGenres} onRemove={this.setGenres} displayValue=\"genre_name\" placeholder=\"Select Genres (optional)\"/>\r\n                            <input\r\n                              type=\"text\"\r\n                              placeholder=\"Max. Results\"\r\n                              value={this.state.max_results}\r\n                              onChange={this.setMaxGenres}\r\n                            />\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"Bottom-Box\">\r\n                    {this.state.max_results}\r\n                    </div>\r\n                </div>\r\n                <Recommendations ready={this.state.ready} rows={rows} cols={cols}/>\r\n            </div>\r\n        );\r\n    }\r\n}\r\nexport default App;\r\n"]},"metadata":{},"sourceType":"module"}