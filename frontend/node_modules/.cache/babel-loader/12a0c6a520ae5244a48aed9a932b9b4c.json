{"ast":null,"code":"\"use strict\";\n/* eslint-disable prefer-rest-params */\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.getArrow = exports.getInstance = void 0;\n\nconst util = require(\"util\");\n\nlet loggerInstance;\nconst defaultProvider = {\n  // tslint:disable: no-console\n  log: console.log,\n  debug: console.log,\n  info: console.info,\n  warn: console.warn,\n  error: console.error\n}; // log level 'weight'\n\nvar LEVELS;\n\n(function (LEVELS) {\n  LEVELS[LEVELS[\"debug\"] = 10] = \"debug\";\n  LEVELS[LEVELS[\"info\"] = 20] = \"info\";\n  LEVELS[LEVELS[\"warn\"] = 30] = \"warn\";\n  LEVELS[LEVELS[\"error\"] = 50] = \"error\";\n  LEVELS[LEVELS[\"silent\"] = 80] = \"silent\";\n})(LEVELS || (LEVELS = {}));\n\nfunction getInstance() {\n  if (!loggerInstance) {\n    loggerInstance = new Logger();\n  }\n\n  return loggerInstance;\n}\n\nexports.getInstance = getInstance;\n\nclass Logger {\n  constructor() {\n    this.setLevel('info');\n    this.setProvider(() => defaultProvider);\n  } // log will log messages, regardless of logLevels\n\n\n  log() {\n    this.provider.log(this._interpolate.apply(null, arguments));\n  }\n\n  debug() {\n    if (this._showLevel('debug')) {\n      this.provider.debug(this._interpolate.apply(null, arguments));\n    }\n  }\n\n  info() {\n    if (this._showLevel('info')) {\n      this.provider.info(this._interpolate.apply(null, arguments));\n    }\n  }\n\n  warn() {\n    if (this._showLevel('warn')) {\n      this.provider.warn(this._interpolate.apply(null, arguments));\n    }\n  }\n\n  error() {\n    if (this._showLevel('error')) {\n      this.provider.error(this._interpolate.apply(null, arguments));\n    }\n  }\n\n  setLevel(v) {\n    if (this.isValidLevel(v)) {\n      this.logLevel = v;\n    }\n  }\n\n  setProvider(fn) {\n    if (fn && this.isValidProvider(fn)) {\n      this.provider = fn(defaultProvider);\n    }\n  }\n\n  isValidProvider(fnProvider) {\n    const result = true;\n\n    if (fnProvider && typeof fnProvider !== 'function') {\n      throw new Error('[HPM] Log provider config error. Expecting a function.');\n    }\n\n    return result;\n  }\n\n  isValidLevel(levelName) {\n    const validLevels = Object.keys(LEVELS);\n    const isValid = validLevels.includes(levelName);\n\n    if (!isValid) {\n      throw new Error('[HPM] Log level error. Invalid logLevel.');\n    }\n\n    return isValid;\n  }\n  /**\r\n   * Decide to log or not to log, based on the log levels 'weight'\r\n   * @param  {String}  showLevel [debug, info, warn, error, silent]\r\n   * @return {Boolean}\r\n   */\n\n\n  _showLevel(showLevel) {\n    let result = false;\n    const currentLogLevel = LEVELS[this.logLevel];\n\n    if (currentLogLevel && currentLogLevel <= LEVELS[showLevel]) {\n      result = true;\n    }\n\n    return result;\n  } // make sure logged messages and its data are return interpolated\n  // make it possible for additional log data, such date/time or custom prefix.\n\n\n  _interpolate(format) {\n    for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n      args[_key - 1] = arguments[_key];\n    }\n\n    const result = util.format(format, ...args);\n    return result;\n  }\n\n}\n/**\r\n * -> normal proxy\r\n * => router\r\n * ~> pathRewrite\r\n * ≈> router + pathRewrite\r\n *\r\n * @param  {String} originalPath\r\n * @param  {String} newPath\r\n * @param  {String} originalTarget\r\n * @param  {String} newTarget\r\n * @return {String}\r\n */\n\n\nfunction getArrow(originalPath, newPath, originalTarget, newTarget) {\n  const arrow = ['>'];\n  const isNewTarget = originalTarget !== newTarget; // router\n\n  const isNewPath = originalPath !== newPath; // pathRewrite\n\n  if (isNewPath && !isNewTarget) {\n    arrow.unshift('~');\n  } else if (!isNewPath && isNewTarget) {\n    arrow.unshift('=');\n  } else if (isNewPath && isNewTarget) {\n    arrow.unshift('≈');\n  } else {\n    arrow.unshift('-');\n  }\n\n  return arrow.join('');\n}\n\nexports.getArrow = getArrow;","map":{"version":3,"sources":["C:/Users/Connor L/Documents/GitHub/mars/frontend/node_modules/http-proxy-middleware/dist/logger.js"],"names":["Object","defineProperty","exports","value","getArrow","getInstance","util","require","loggerInstance","defaultProvider","log","console","debug","info","warn","error","LEVELS","Logger","constructor","setLevel","setProvider","provider","_interpolate","apply","arguments","_showLevel","v","isValidLevel","logLevel","fn","isValidProvider","fnProvider","result","Error","levelName","validLevels","keys","isValid","includes","showLevel","currentLogLevel","format","args","originalPath","newPath","originalTarget","newTarget","arrow","isNewTarget","isNewPath","unshift","join"],"mappings":"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","sourcesContent":["\"use strict\";\r\n/* eslint-disable prefer-rest-params */\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.getArrow = exports.getInstance = void 0;\r\nconst util = require(\"util\");\r\nlet loggerInstance;\r\nconst defaultProvider = {\r\n    // tslint:disable: no-console\r\n    log: console.log,\r\n    debug: console.log,\r\n    info: console.info,\r\n    warn: console.warn,\r\n    error: console.error,\r\n};\r\n// log level 'weight'\r\nvar LEVELS;\r\n(function (LEVELS) {\r\n    LEVELS[LEVELS[\"debug\"] = 10] = \"debug\";\r\n    LEVELS[LEVELS[\"info\"] = 20] = \"info\";\r\n    LEVELS[LEVELS[\"warn\"] = 30] = \"warn\";\r\n    LEVELS[LEVELS[\"error\"] = 50] = \"error\";\r\n    LEVELS[LEVELS[\"silent\"] = 80] = \"silent\";\r\n})(LEVELS || (LEVELS = {}));\r\nfunction getInstance() {\r\n    if (!loggerInstance) {\r\n        loggerInstance = new Logger();\r\n    }\r\n    return loggerInstance;\r\n}\r\nexports.getInstance = getInstance;\r\nclass Logger {\r\n    constructor() {\r\n        this.setLevel('info');\r\n        this.setProvider(() => defaultProvider);\r\n    }\r\n    // log will log messages, regardless of logLevels\r\n    log() {\r\n        this.provider.log(this._interpolate.apply(null, arguments));\r\n    }\r\n    debug() {\r\n        if (this._showLevel('debug')) {\r\n            this.provider.debug(this._interpolate.apply(null, arguments));\r\n        }\r\n    }\r\n    info() {\r\n        if (this._showLevel('info')) {\r\n            this.provider.info(this._interpolate.apply(null, arguments));\r\n        }\r\n    }\r\n    warn() {\r\n        if (this._showLevel('warn')) {\r\n            this.provider.warn(this._interpolate.apply(null, arguments));\r\n        }\r\n    }\r\n    error() {\r\n        if (this._showLevel('error')) {\r\n            this.provider.error(this._interpolate.apply(null, arguments));\r\n        }\r\n    }\r\n    setLevel(v) {\r\n        if (this.isValidLevel(v)) {\r\n            this.logLevel = v;\r\n        }\r\n    }\r\n    setProvider(fn) {\r\n        if (fn && this.isValidProvider(fn)) {\r\n            this.provider = fn(defaultProvider);\r\n        }\r\n    }\r\n    isValidProvider(fnProvider) {\r\n        const result = true;\r\n        if (fnProvider && typeof fnProvider !== 'function') {\r\n            throw new Error('[HPM] Log provider config error. Expecting a function.');\r\n        }\r\n        return result;\r\n    }\r\n    isValidLevel(levelName) {\r\n        const validLevels = Object.keys(LEVELS);\r\n        const isValid = validLevels.includes(levelName);\r\n        if (!isValid) {\r\n            throw new Error('[HPM] Log level error. Invalid logLevel.');\r\n        }\r\n        return isValid;\r\n    }\r\n    /**\r\n     * Decide to log or not to log, based on the log levels 'weight'\r\n     * @param  {String}  showLevel [debug, info, warn, error, silent]\r\n     * @return {Boolean}\r\n     */\r\n    _showLevel(showLevel) {\r\n        let result = false;\r\n        const currentLogLevel = LEVELS[this.logLevel];\r\n        if (currentLogLevel && currentLogLevel <= LEVELS[showLevel]) {\r\n            result = true;\r\n        }\r\n        return result;\r\n    }\r\n    // make sure logged messages and its data are return interpolated\r\n    // make it possible for additional log data, such date/time or custom prefix.\r\n    _interpolate(format, ...args) {\r\n        const result = util.format(format, ...args);\r\n        return result;\r\n    }\r\n}\r\n/**\r\n * -> normal proxy\r\n * => router\r\n * ~> pathRewrite\r\n * ≈> router + pathRewrite\r\n *\r\n * @param  {String} originalPath\r\n * @param  {String} newPath\r\n * @param  {String} originalTarget\r\n * @param  {String} newTarget\r\n * @return {String}\r\n */\r\nfunction getArrow(originalPath, newPath, originalTarget, newTarget) {\r\n    const arrow = ['>'];\r\n    const isNewTarget = originalTarget !== newTarget; // router\r\n    const isNewPath = originalPath !== newPath; // pathRewrite\r\n    if (isNewPath && !isNewTarget) {\r\n        arrow.unshift('~');\r\n    }\r\n    else if (!isNewPath && isNewTarget) {\r\n        arrow.unshift('=');\r\n    }\r\n    else if (isNewPath && isNewTarget) {\r\n        arrow.unshift('≈');\r\n    }\r\n    else {\r\n        arrow.unshift('-');\r\n    }\r\n    return arrow.join('');\r\n}\r\nexports.getArrow = getArrow;\r\n"]},"metadata":{},"sourceType":"script"}